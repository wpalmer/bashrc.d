#!/bin/bash

function cd(){
	# If "cd" is successful and has an effect
	if local new_directory="$(builtin cd "$@" && builtin pwd)"; then
		# if "new directory" is the same as "old directory", just change to the directory and don't push the
		# transition. There are edge-cases where this would not be desired, but those are highly unlikely for
		# an interactive session (which is the only time this should ever be included anyway).
		if [ "$new_directory" = "$(builtin pwd)" ]; then
			builtin cd "$new_directory"
		else
			if \
				builtin dirs -l +1 >/dev/null 2>&1 &&
				[ "$(builtin cd "$(builtin dirs -l +1)" 2>&- && builtin pwd)" = "${new_directory}" ];
			then
				builtin popd +1 -n >/dev/null 2>&1
			fi

			builtin pushd "${new_directory}" >/dev/null 2>&1
		fi
	fi
}

function back(){
	local num="$1"
	[ -z "$num" ] && num="1"

	if echo " $num" | grep -q '^ .*[^0-9]'; then
		local count="$(builtin dirs -v -l | sed 's/\s*[0-9]*\s*//' | grep -F "$num" | sort -u | wc -l)"
		if [ $count -gt 1 ]; then
			echo 'ambiguous pattern `'"$num'" >&2
			return 1
		fi

		if [ $count -lt 1 ]; then
			echo 'nothing matches `'"$num'" >&2
			return 1
		fi

		cd "$(builtin dirs -v -l | sed 's/\s*[0-9]*\s*//' | grep -F "$num" | head -1)"
		return $?
	fi
	builtin dirs -l +"$num" >/dev/null 2>&1 && cd "$(builtin dirs -l +"$num")"
}
